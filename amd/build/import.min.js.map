{"version":3,"sources":["../src/import.js"],"names":["define","ajax","$","textInfo","progressBar","lastSavePoint","runImport","numberSort","a","b","showStatus","percent","minUserid","doneUserImports","length","maxUserid","stoppedText","minUserText","val","html","toFixed","nextUserid","activeUserImports","join","callRestorePoint","userid","call","methodname","args","action","offset","done","fail","err","alert","message","callAjaxParallel","response","Math","max","nextOffset","importPos","indexOf","splice","push","sort","shift","startImport","init","startUserid","maxUsers","append","click"],"mappings":"AAAAA,OAAM,mCAAC,CAAC,WAAD,CAAc,QAAd,CAAD,CAA0B,SAAUC,CAAV,CAAgBC,CAAhB,CAAmB,IAC3CC,CAAAA,CAD2C,CAE3CC,CAF2C,CAI3CC,CAAa,CAAG,CAJ2B,CAM3CC,CAAS,GANkC,CAQ/C,QAASC,CAAAA,CAAT,CAAoBC,CAApB,CAAuBC,CAAvB,CAA0B,CACtB,MAAOD,CAAAA,CAAC,CAAGC,CACd,CAED,QAASC,CAAAA,CAAT,EAAsB,IACdC,CAAAA,CAAO,CAAwD,GAArD,EAAC,CAACC,CAAS,CAAGC,CAAe,CAACC,MAA7B,EAAuCC,CAAxC,CADI,CAEdC,CAAW,CAAG,EAFA,CAGlB,GAAI,CAACV,CAAL,CAAgB,CACZU,CAAW,CAAG,iCACjB,CACD,GAAIC,CAAAA,CAAW,CAAG,EAAlB,CACA,GAA+B,CAA3B,GAAAJ,CAAe,CAACC,MAApB,CAAkC,CAC9BG,CAAW,CAAG,gBAAkBL,CAAlB,CAA8B,GAC/C,CACDR,CAAW,CAACc,GAAZ,CAAgBP,CAAhB,EACAR,CAAQ,CAACgB,IAAT,CAAc,MAAQR,CAAO,CAACS,OAAR,CAAgB,CAAhB,CAAR,CAA4B,IAA5B,CAAmCJ,CAAnC,wBACWJ,CAAS,CAAGC,CAAe,CAACC,MADvC,EACiDG,CADjD,uBAEUZ,CAFV,sBAGSgB,CAHT,6BAIgBC,CAAiB,CAACC,IAAlB,CAAuB,IAAvB,CAJhB,CAI+C,MAJ7D,CAKH,CA5B8C,GA8B3CF,CAAAA,CA9B2C,CA+B3CN,CAAS,CAAG,CA/B+B,CAiC3CO,CAAiB,CAAG,EAjCuB,CAkC3CT,CAAe,CAAG,EAlCyB,CAmC3CD,CAnC2C,CAuC/C,QAASY,CAAAA,CAAT,CAA0BC,CAA1B,CAAkC,CAC9BxB,CAAI,CAACyB,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,sCADL,CAEPC,IAAI,CAAE,CACFC,MAAM,CAAE,WADN,CAEFJ,MAAM,CAAEA,CAFN,CAGFK,MAAM,CAAE,CAHN,CAFC,CAAD,CAAV,EAOI,CAPJ,EAOOC,IAPP,CAOY,UAAY,CACpB1B,CAAa,CAAGoB,CACnB,CATD,EASGO,IATH,CASQ,SAAUC,CAAV,CAAe,CACnBC,KAAK,CAAC,iDAAmDD,CAAG,CAACE,OAAxD,CACR,CAXD,CAYH,CAED,QAASC,CAAAA,CAAT,CAA0BX,CAA1B,CAAkCK,CAAlC,CAA0C,CACtCL,CAAM,CAAGA,CAAM,EAAIJ,CAAnB,CACAS,CAAM,CAAGA,CAAM,EAAI,CAAnB,CAEA,GAAIL,CAAM,CAAGV,CAAb,CAAwB,CACpBT,CAAS,GACZ,CACD,GAAI,CAACA,CAAD,EAAyB,CAAX,GAAAwB,CAAlB,CAAgC,CAC5BpB,CAAU,GACV,MACH,CAED,GAAIY,CAAiB,CAACR,MAAlB,CA7BgB,CA6BhB,EAA2D,CAAX,GAAAgB,CAApD,CAAkE,CAC7D,UAASL,CAAT,CAAiBK,CAAjB,CAAyB,CACtB7B,CAAI,CAACyB,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,sCADL,CAEPC,IAAI,CAAE,CACFC,MAAM,CAAE,QADN,CAEFJ,MAAM,CAAEA,CAFN,CAGFK,MAAM,CAAEA,CAHN,CAFC,CAAD,CAAV,EAOI,CAPJ,EAOOC,IAPP,CAOY,SAAUM,CAAV,CAAoB,CAC5BtB,CAAS,CAAGuB,IAAI,CAACC,GAAL,CAASxB,CAAT,CAAoBsB,CAAQ,CAACtB,SAA7B,CAAZ,CACA,GAA4B,CAAC,CAAzB,GAAAsB,CAAQ,CAACG,UAAb,CAAgC,CAE5B,GAAIC,CAAAA,CAAS,CAAGnB,CAAiB,CAACoB,OAAlB,CAA0BjB,CAA1B,CAAhB,CACAH,CAAiB,CAACqB,MAAlB,CAAyBF,CAAzB,CAAoC,CAApC,EACA5B,CAAe,CAAC+B,IAAhB,CAAqBnB,CAArB,EACAZ,CAAe,CAACgC,IAAhB,CAAqBtC,CAArB,EAGA,MAAOM,CAAe,CAAC,CAAD,CAAf,GAAuBD,CAAS,CAAG,CAA1C,CAA6C,CACzCA,CAAS,CAAGC,CAAe,CAACiC,KAAhB,EAAZ,CACA,GAAwB,CAApB,EAAAlC,CAAS,CAAG,GAAhB,CAA2B,CACvBY,CAAgB,CAACZ,CAAD,CACnB,CACJ,CAEDwB,CAAgB,EACnB,CAhBD,IAgBO,CACHA,CAAgB,CAACX,CAAD,CAASY,CAAQ,CAACG,UAAlB,CACnB,CACJ,CA5BD,CA6BH,CA9BA,EA8BCf,CA9BD,CA8BSK,CA9BT,CAAD,CA+BA,GAAe,CAAX,GAAAA,CAAJ,CAAkB,CACdR,CAAiB,CAACsB,IAAlB,CAAuBnB,CAAvB,EACAJ,CAAU,GACVX,CAAU,EACb,CACD0B,CAAgB,EACnB,CACJ,CAED,QAASW,CAAAA,CAAT,EAAuB,CACnBzC,CAAS,GAAT,CAEA8B,CAAgB,EACnB,CAED,MAAO,CACHY,IAAI,CAAE,cAAUC,CAAV,CAAuBC,CAAvB,CAAiC,CACnCtC,CAAS,CAAGqC,CAAZ,CACA5B,CAAU,CAAGT,CAAS,CAAG,CAAzB,CACAG,CAAS,CAAGmC,CAAZ,CACA7C,CAAa,CAAG4C,CAAhB,CAEA7C,CAAW,CAAGF,CAAC,CAAC,qGAAD,CAAf,CACAC,CAAQ,CAAGD,CAAC,CAAC,aAAD,CAAZ,CAEAA,CAAC,CAAC,cAAD,CAAD,CACKiD,MADL,CACY/C,CADZ,EAEK+C,MAFL,CAEYhD,CAFZ,EAIAD,CAAC,CAAC,mBAAD,CAAD,CAAuBkD,KAAvB,CAA6B,UAAW,CACpCL,CAAW,EACd,CAFD,EAGA7C,CAAC,CAAC,kBAAD,CAAD,CAAsBkD,KAAtB,CAA4B,UAAW,CACnC9C,CAAS,GACZ,CAFD,EAIAI,CAAU,EACb,CAtBE,CAwBV,CAzIK,CAAN","sourcesContent":["define(['core/ajax', 'jquery'], function (ajax, $) {\n    var textInfo;\n    var progressBar;\n\n    var lastSavePoint = 0;\n\n    var runImport = false;\n\n    function numberSort(a, b) {\n        return a - b;\n    }\n\n    function showStatus() {\n        var percent = ((minUserid + doneUserImports.length) / maxUserid) * 100;\n        var stoppedText = '';\n        if (!runImport) {\n            stoppedText = ' <strong>(not running)</strong>';\n        }\n        var minUserText = '';\n        if (doneUserImports.length !== 0) {\n            minUserText = ' (minuserid: ' + minUserid + ')';\n        }\n        progressBar.val(percent);\n        textInfo.html('<p>' + percent.toFixed(2) +'% ' + stoppedText + '</p>' +\n            '<p>Users done: ' + (minUserid + doneUserImports.length) + minUserText + '</p>' +\n            '<p>Save point: ' + lastSavePoint + '</p>' +\n            '<p>Next user: ' + nextUserid + '</p>' +\n            '<p>Working on users: ' + activeUserImports.join(', ') + '</p>');\n    }\n\n    var nextUserid;\n    var maxUserid = 1;\n\n    var activeUserImports = [];\n    var doneUserImports = [];\n    var minUserid;\n\n    var PARALLEL_REQUESTS = 6;\n\n    function callRestorePoint(userid) {\n        ajax.call([{\n            methodname: 'local_learning_analytics_ajax_import',\n            args: {\n                action: 'savepoint',\n                userid: userid,\n                offset: 0\n            }\n        }])[0].done(function () {\n            lastSavePoint = userid;\n        }).fail(function (err) {\n            alert('An unrevolerable error occured during import: ' + err.message);\n        });\n    }\n\n    function callAjaxParallel(userid, offset) {\n        userid = userid || nextUserid;\n        offset = offset || 0;\n\n        if (userid > maxUserid) {\n            runImport = false;\n        }\n        if (!runImport && offset === 0) {\n            showStatus();\n            return;\n        }\n\n        if (activeUserImports.length < PARALLEL_REQUESTS || offset !== 0) {\n            (function(userid, offset) {\n                ajax.call([{\n                    methodname: 'local_learning_analytics_ajax_import',\n                    args: {\n                        action: 'import',\n                        userid: userid,\n                        offset: offset\n                    }\n                }])[0].done(function (response) {\n                    maxUserid = Math.max(maxUserid, response.maxUserid); // just in case someone registers while we run this script\n                    if (response.nextOffset === -1) {\n                        // no more user data to handle, start with next user\n                        var importPos = activeUserImports.indexOf(userid);\n                        activeUserImports.splice(importPos, 1);\n                        doneUserImports.push(userid);\n                        doneUserImports.sort(numberSort);\n\n                        // smallest userid -> mark this as done\n                        while (doneUserImports[0] === minUserid + 1) {\n                            minUserid = doneUserImports.shift();\n                            if (minUserid % 100 === 0) {\n                                callRestorePoint(minUserid);\n                            }\n                        }\n\n                        callAjaxParallel();\n                    } else {\n                        callAjaxParallel(userid, response.nextOffset);\n                    }\n                });\n            }(userid, offset));\n            if (offset === 0) {\n                activeUserImports.push(userid);\n                nextUserid++;\n                showStatus();\n            }\n            callAjaxParallel();\n        }\n    }\n\n    function startImport() {\n        runImport = true;\n\n        callAjaxParallel();\n    }\n\n    return {\n        init: function (startUserid, maxUsers) {\n            minUserid = startUserid;\n            nextUserid = minUserid + 1;\n            maxUserid = maxUsers;\n            lastSavePoint = startUserid;\n\n            progressBar = $('<progress class=\"progress progress-striped progress-animated\" value=\"0\" max=\"100\"></progress>');\n            textInfo = $('<div></div>');\n\n            $('#import_info')\n                .append(progressBar)\n                .append(textInfo);\n\n            $('#start_import_btn').click(function() {\n                startImport();\n            });\n            $('#stop_import_btn').click(function() {\n                runImport = false;\n            });\n\n            showStatus();\n        }\n    };\n});"],"file":"import.min.js"}